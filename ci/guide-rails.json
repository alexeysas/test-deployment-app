{
	"metadata": {
		"version": 2
	},
	"application": {
		"name": "alexey-test-app",
		"language": "LANGUAGE_UNDEFINED",
		"artifact_store": {
			"repositories": null
		}
	},
	"pipeline": {
		"segments": [
			{
				"name": "Build",
				"segment_type": "build",
				"publish_attributes": {
					"publish": true,
					"docker_attributes": {
						"repository": "((application.name))",
						"tags": [
							"((application.version))",
							"latest"
						],
						"path": "",
						"context": ".",
						"docker_file_path": "Test.App\\Dockerfile",
						"build_args": {
							"-f": "Test.App\\Dockerfile"
						}
					}
				},
				"exit_actions": {},
				"deployment_strategy": {},
				"application_init": {},
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"post_deployment_actions": {
					"loadbalancer": {}
				},
				"source_code_available": true,
				"tasks": [
					{
						"name": "alexey-test-app",
						"steps": [
							{
								"name": "env",
								"definition": "env",
								"command": "env",
								"properties": null
							}
						],
						"docker_registry_alias_id": "81e5f42e-c451-41ad-62c0-b2f861b3a72f",
						"docker_options": {
							"repository": "alpine"
						}
					}
				]
			},
			{
				"name": "Isolation",
				"segment_type": "isolation",
				"run_after": [
					"Build"
				],
				"job_steps": [
					{
						"name": "check",
						"definition": "check",
						"command": "#!/bin/bash\n\ndload_dir=/app/publish\n\nif [ ! -d \"$dload_dir\" ]; then\n  echo \"$dload_dir does not exist\"\n  exit 1\nelse\n  echo \"$dload_dir exists\"\nfi",
						"properties": null
					}
				],
				"exit_actions": {},
				"deployment_strategy": {
					"canaries": 1,
					"max_in_flight": 1,
					"canary_watch_time": "5000-30000",
					"update_watch_time": "5000-30000",
					"serial": false
				},
				"application_init": {},
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"post_deployment_actions": {
					"loadbalancer": {}
				},
				"docker_options": {
					"repository": "((application.name))"
				},
				"deployment_target": 1
			}
		],
		"exit_actions": {
			"default": {
				"code_analysis": {
					"publish": true,
					"properties": null
				}
			}
		},
		"default_properties": null,
		"deployment_files": [],
		"application_init": {
			"command": "bin/start-service.sh"
		}
	},
	"organization": {
		"orgname": "GR-Product"
	}
}